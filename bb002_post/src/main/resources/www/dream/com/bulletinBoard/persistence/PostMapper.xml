<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper
	namespace="www.dream.com.bulletinBoard.persistence.PostMapper">
	<resultMap type="www.dream.com.bulletinBoard.model.PostVO"
		id="postMapper"
		extends="www.dream.com.common.persistence.CommonMngVOMapper.commonMngVOMap">
		<id property="id" column="id"></id>
		<result property="title" column="title"></result>
		<result property="content" column="content"></result>
		<result property="readCnt" column="read_cnt"></result>
		<result property="likeCnt" column="like_cnt"></result>
		<result property="dislikeCnt" column="dislike_cnt"></result>
		<!-- Master-Detail(1:N) 구조에서 Detail이 Master를 함께 join으로 읽어서 객체를 만들 때 사용 -->
		<association property="writer" columnPrefix="w_"
			 resultMap="www.dream.com.party.persistence.PartyMapper.partyMap">			
		</association>
	</resultMap>

	<!--public List<PostVO> getList(@Param("boardId") int boardId); -->
	<select id="getList" resultMap="postMapper"> 
	<![CDATA[ 
	select p.*, w.name w_name, w.descrim w_descrim
	  from s_post p, s_party w
	 where board_id = #{boardId}
	   and p.writer_id = w.user_id
	]]>
	</select>
	
	<!-- public int insert(@Param("board") BoardVO board, @Param("post") PostVO post); -->
	<insert id="insert">
		insert into s_post(id, board_id, writer_id, title, content)
			values(get_id(seq_post_id.nextval), #{board.id}, #{post.writer.userId}, #{post.title}, #{post.content})
	</insert>
</mapper>